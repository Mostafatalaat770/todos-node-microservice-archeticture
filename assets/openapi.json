{
    "openapi": "3.0.1",
    "info": {
        "title": "Todo Service",
        "version": "0.0.1"
    },
    "servers": [
        {
            "url": "/"
        }
    ],
    "tags": [],
    "paths": {
        "/todos/{id}": {
            "get": {
                "summary": "Gets a todo",
                "operationId": "getTodo",
                "tags": ["Todos"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the todo",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The returned todo",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Todo"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Updates a todo",
                "operationId": "updateTodo",
                "tags": ["Todos"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the todo",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Todo"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated todo",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Todo"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Todo not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a todo",
                "operationId": "deleteTodo",
                "tags": ["Todos"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The todo was deleted"
                    }
                }
            }
        },
        "/todos": {
            "get": {
                "summary": "Gets all todos",
                "operationId": "getTodos",
                "tags": ["Todos"],
                "responses": {
                    "200": {
                        "description": "The returned todos",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Todo"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a todo",
                "operationId": "createTodo",
                "tags": ["Todos"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Todo"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created todo",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Todo"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Todo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 40
                    },
                    "assignee": {
                        "type": "string",
                        "maxLength": 160
                    },
                    "dueDate": {
                        "type": "string",
                        "format": "date"
                    }
                },
                "required": ["name", "assignee", "dueDate"]
            },
            "BadRequestError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "errorCode": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "path": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "NotFoundError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            }
        }
    }
}
